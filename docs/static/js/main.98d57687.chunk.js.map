{"version":3,"sources":["components/AddCategory.jsx","helpers/getGifs.js","components/GIFgridItem.jsx","components/GIFgrid.jsx","hooks/useFetchGif.jsx","GifExpertApp.jsx","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categories","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","response","json","data","gifs","map","img","id","title","images","downsized_medium","GIFgridItem","props","className","src","alt","GIFgrid","loading","state","setState","useEffect","then","imgs","useFetchGif","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAE1B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAgBA,OACI,sBAAMC,SAXW,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAAAS,GAAU,OAAKP,GAAL,mBAAoBO,OAC5CN,EAAc,MAMlB,SACI,uBACIO,KAAK,OACLC,MAAQT,EACRU,SAnBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,+BCPlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,0FAE4EC,UAAUH,GAFtF,sBAGII,MAAOF,GAHX,cAGbG,EAHa,gBAIEA,EAASC,OAJX,uBAIZC,EAJY,EAIZA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVvB,kBAcZM,GAdY,4CAAH,sDCCPO,EAAc,SAAEC,GAGzB,OACI,sBAAKC,UAAU,8CAAf,UACI,qBAAKC,IAAKF,EAAMd,IAAKiB,IAAI,WACzB,4BAAIH,EAAMJ,YCHTQ,EAAU,SAAC,GAAgB,IAAfpB,EAAc,EAAdA,SAEtB,ECHwB,SAACA,GAExB,MAA0Bd,mBAAS,CAC/BqB,KAAM,GACNc,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAqBA,OAhBAC,qBAAW,WAEPzB,EAASC,GACJyB,MAAM,SAAAC,GAEHH,EAAS,CACLhB,KAAMmB,EACNL,SAAS,SAMtB,CAACrB,IAGGsB,EDpBuBK,CAAY3B,GAA/Ba,EAAZ,EAAON,KAAP,EAAoBc,QAMnB,OACI,qCACI,6BAAKrB,IAEL,qBAAKiB,UAAU,YAAf,SAGQJ,EAAOJ,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,eAEQA,GADCA,EAAIC,aEQtBiB,MA1Bf,SAAsBZ,GAGnB,MAAoC9B,mBAAS,IAA7C,mBAAOQ,EAAP,KAAmBT,EAAnB,KAGC,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBAEA,6BAEQS,EAAWe,KAAK,SAAAT,GACZ,OAAO,cAAC,EAAD,CAEKA,SAAWA,GADNA,Y,MCdzC6B,IAASC,OAEP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.98d57687.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ( {setCategories} ) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value)\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (inputValue.trim().length > 2) {\r\n            setCategories(categories => [inputValue, ...categories]);\r\n            setInputValue('');\r\n        }\r\n        \r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input \r\n                type=\"text\" \r\n                value={ inputValue }\r\n                onChange={handleInputChange}\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n","\r\nexport const getGifs = async (category) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?api_key=KcLuskJXcnMARv051R8T89gEVT7Kvy2i&q=${encodeURI(category)}&limit=10`;\r\n    const response = await fetch( url );\r\n    const {data} = await response.json();\r\n\r\n    const gifs = data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n    \r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GIFgridItem = ( props ) => {\r\n\r\n    \r\n    return (\r\n        <div className=\"card animate__animated animate__fadeInRight\">\r\n            <img src={props.url} alt=\"Imagen\" />\r\n            <p>{props.title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport {useFetchGif} from '../hooks/useFetchGif'\r\nimport { GIFgridItem } from './GIFgridItem';\r\n\r\n\r\nexport const GIFgrid = ({category}) => {\r\n\r\n   const {data:images, loading} = useFetchGif(category);\r\n    // useEffect(()=> {\r\n    //     getGifs( category )\r\n    //         .then(imgs => setImages( imgs ));\r\n    // }, [category]);\r\n\r\n    return (\r\n        <>\r\n            <h3>{category}</h3>\r\n\r\n            <div className=\"card-grid\">\r\n                \r\n                {\r\n                    images.map( img => (\r\n                        <GIFgridItem\r\n                            key={img.id} \r\n                            {...img} \r\n                        />\r\n                    ))\r\n                }\r\n                \r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport {getGifs} from '../helpers/getGifs';\r\n\r\n\r\nexport const useFetchGif = (category) => {\r\n    \r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect( () => {\r\n\r\n        getGifs( category )\r\n            .then( imgs => {\r\n\r\n                setState({\r\n                    data: imgs,\r\n                    loading: false\r\n                })\r\n            \r\n                \r\n            });\r\n         \r\n    }, [category])\r\n\r\n\r\n    return state;\r\n}\r\n","import React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GIFgrid } from './components/GIFgrid';\r\n\r\nfunction GifExpertApp(props) {\r\n\r\n\r\n   const [categories, setCategories] = useState([]);\r\n\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={ setCategories } />\r\n            <hr />\r\n\r\n            <ol>\r\n                { \r\n                    categories.map( category => {\r\n                        return <GIFgrid \r\n                                    key={category}\r\n                                    category={ category } \r\n                                />\r\n                    }) \r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifExpertApp\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\n\nReactDOM.render(\n  \n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}